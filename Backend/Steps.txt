Open Visual Studio

Click on Create a new project

Choose ASP.NET Core Web API

Click Next

Field	Value
Project Name	UserManagementSystem.API
Location	Choose your UserManagementSystem\Backend\ folder manually
Solution Name	UserManagementSystem


ðŸ”· Step 3: Project Settings
âœ… .NET Version: .NET 8 (LTS) or .NET 7

âœ… Uncheck Use HTTPS (optional, for easier testing)

âœ… Uncheck Enable OpenAPI Support (or keep if you want Swagger)

âœ… Click Create

ðŸ”¹ Open Package Manager Console (Tools â†’ NuGet â†’ PMC)
Then run:

Install-Package Microsoft.AspNetCore.Identity.EntityFrameworkCore
Install-Package Microsoft.EntityFrameworkCore.SqlServer
Install-Package Microsoft.EntityFrameworkCore.Tools
version-8.0.6



git init
git add .
git commit -m "ðŸŽ‰ Initial commit: Backend ASP.NET Core API setup"
git branch -M main 
git remote add origin https://github.com/safrinanishi97/HospitalManagementSystem.git
git push -u origin main

Poroborti sob commit a,
git add .
git commit -m "Commit Message"
git push


In UserManagementSystem.API project, create these folders:


- Data/
- Models/
- DTOs/
- Services/
- Controllers/
- Helpers/


Create ApplicationUser Class

Setup ApplicationDbContext Class

Configure Services in Program.cs
// 1. Add DbContext
builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

// 2. Add Identity
builder.Services.AddIdentity<ApplicationUser, IdentityRole>()
    .AddEntityFrameworkStores<ApplicationDbContext>()
    .AddDefaultTokenProviders();

// 3. Add JWT Authentication
var jwtKey = builder.Configuration["JWT:Key"];
var key = Encoding.UTF8.GetBytes(jwtKey);

builder.Services.AddAuthentication(options =>
{
    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;
    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;
})
.AddJwtBearer(options =>
{
    options.TokenValidationParameters = new TokenValidationParameters
    {
        ValidateIssuer = true,
        ValidateAudience = true,
        ValidIssuer = builder.Configuration["JWT:Issuer"],
        ValidAudience = builder.Configuration["JWT:Audience"],
        IssuerSigningKey = new SymmetricSecurityKey(key)
    };
});

app.UseAuthentication(); // Add before Authorization


 Step 4: Add Connection String in appsettings.json
















